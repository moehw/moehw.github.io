<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://moehw.github.io/</id><title>.: moe's notes :.</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2022-04-09T23:06:56+01:00</updated> <author> <name>Moe Hardware</name> <uri>https://moehw.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://moehw.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://moehw.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Moe Hardware </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Debugging PPC with PEmicro MultiLink</title><link href="https://moehw.github.io/posts/debugging-ppc-with-pemicro-multilink/" rel="alternate" type="text/html" title="Debugging PPC with PEmicro MultiLink" /><published>2021-12-13T07:03:49+00:00</published> <updated>2022-04-09T21:19:02+01:00</updated> <id>https://moehw.github.io/posts/debugging-ppc-with-pemicro-multilink/</id> <content src="https://moehw.github.io/posts/debugging-ppc-with-pemicro-multilink/" /> <author> <name>Moe Hardware</name> </author> <category term="howto" /> <summary> Experience in debugging a device with a MPC5xxx from NXP (PPC architecture). It had approximately the following debug connector: And there was access to the PEmicro Multilink Universal. Software S32DS from NXP can work with it (to download it you can use creds from BugMeNot). But this IDE itself does not allow you to conveniently work for the purpose of debugging and dumping the firmware, ... </summary> </entry> <entry><title>UDS protocol header file for RE</title><link href="https://moehw.github.io/posts/uds-header/" rel="alternate" type="text/html" title="UDS protocol header file for RE" /><published>2021-11-30T18:22:07+00:00</published> <updated>2021-11-30T18:22:07+00:00</updated> <id>https://moehw.github.io/posts/uds-header/</id> <content src="https://moehw.github.io/posts/uds-header/" /> <author> <name>Moe Hardware</name> </author> <category term="howto" /> <summary> TL;DR What I can contribute is this header file (to open it in IDA Pro and to use enums): uds.h If you want to analyze exactly the part of the code with the processing of the UDS (a good attack vector), but there are no lines and logs, and, for example, the analysis of accesses to the memory area with the CAN (memory mapping) does not help… Then you can search for constant values in the code,... </summary> </entry> </feed>
